import logging

import aiosqlite
from aiogram import Router
from aiogram.enums.parse_mode import ParseMode
from aiogram.filters import Command
from aiogram.types import Message

router = Router()


@router.message(Command("toxic_users"))
async def on_message(message: Message):
    logging.info("Received /toxic_users command.")
    chat_id = message.chat.id
    async with aiosqlite.connect("mute_bot.db") as db:
        async with db.execute(
            """
            SELECT user_id, AVG(score) as avg_score
            FROM toxicity_scores
            WHERE chat_id = ?
            GROUP BY user_id
            ORDER BY avg_score DESC
            LIMIT 10
            """,
            (chat_id,),
        ) as cursor:
            rows = await cursor.fetchall()
            if rows:
                message_text = "üò° –ê–Ω—Ç–∏—Ä–µ–π—Ç–∏–Ω–≥ —Å–∞–º—ã—Ö —Ç–æ–∫—Å–∏—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
                for row in rows:
                    user_id, avg_score = row
                    user = (await message.bot.get_chat_member(chat_id, user_id)).user
                    message_text += f"- <a href='tg://user?id={user_id}'>{user.username or user.full_name}</a> üí© —Å–æ —Å—Ä–µ–¥–Ω–∏–º —É—Ä–æ–≤–Ω–µ–º —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç–∏ {avg_score:.2f}\n"
                message_text += "\n–ì–æ–Ω–∏—Ç–µ –∏—Ö –∏ –ø–æ—Ä–∏—Ü–∞–π—Ç–µ! üö´"
                await message.reply(message_text, parse_mode=ParseMode.HTML)
            else:
                await message.reply("üòä –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç —Ç–æ–∫—Å–∏—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
